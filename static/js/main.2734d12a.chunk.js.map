{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.js","Api/index.js","Components/Charts/Charts.js","Components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","Components/Charts/Charts.module.css","Images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","classes","container","Grid","spacing","justify","item","component","Card","xs","sm","cx","infected","style","marginBottom","background","CardContent","Typography","color","variant","gutterBottom","start","end","value","duration","separator","Date","toDateString","gutterBottocm","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailiydata","total","date","reportDate","fetchCountries","countries","name","Charts","useState","dailyData","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","pointRadius","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","props","recievedCountries","SetCountries","FormControl","margin","NativeSelect","defaultValue","onChange","e","handleCountryChange","target","width","textAlign","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2734d12a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2_RWF\",\"Card\":\"Cards_Card__woyTg\",\"infected\":\"Cards_infected__1lxKe\",\"recovered\":\"Cards_recovered__XekLr\",\"deaths\":\"Cards_deaths__2bL8p\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport classes from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  console.log(confirmed);\n\n  if (!confirmed) {\n    return \"Loading\";\n  }\n  return (\n    <div className={classes.container}>\n      <Grid container spacing={3} justify=\"space-around\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          sm={3}\n          className={cx(classes.Card, classes.infected)}\n          style={{ marginBottom: \"1rem\", background: \"rgba(0,0,255,0.1)\" }}>\n          <CardContent>\n            <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2}\n                separator=\",\"\n              />{\" \"}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of active cases of Covid19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          sm={3}\n          className={cx(classes.Card, classes.recovered)}\n          style={{ marginBottom: \"1rem\", background: \"rgba(0,255,0,0.1)\" }}>\n          <CardContent>\n            <Typography color=\"textSecondary\" variant=\"h5\" gutterBottocm>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of recoveries from covid19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          sm={3}\n          className={cx(classes.Card, classes.deaths)}\n          style={{ marginBottom: \"1rem\", background: \"rgba(255,0,0,0.1)\" }}>\n          <CardContent>\n            <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">Number of deaths in covid19</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from 'axios'\nconst url = \"https://covid19.mathdro.id/api\"\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`\n    }\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n        return { confirmed, recovered, deaths, lastUpdate }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailiydata) => ({\n            confirmed: dailiydata.confirmed.total,\n            deaths: dailiydata.deaths.total,\n            date: dailiydata.reportDate\n        }))\n        return modifiedData\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n        return countries.map(country => country.name)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { fetchDailyData } from \"../../Api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport classes from \"./Charts.module.css\";\n\nconst Charts = ({ data, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchApi();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"blue\",\n            fill: true,\n            pointRadius: 1,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true,\n            pointRadius: 1,\n          },\n        ],\n      }}\n    />\n  ) : null;\n  const barChart = data.confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \" rgba(0, 0, 255, 0.7)\",\n              \"rgba(0, 255, 0, 0.7)\",\n              \" rgba(255, 0, 0, 0.7)\",\n            ],\n            data: [\n              data.confirmed.value,\n              data.recovered.value,\n              data.deaths.value,\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n  return (\n    <div className={classes.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Charts;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport { fetchCountries } from \"../../Api\";\n\nconst CountryPicker = (props) => {\n  //props destructered\n  const [recievedCountries, SetCountries] = useState([]);\n  useEffect(() => {\n    const fetchApi = async () => {\n      SetCountries(await fetchCountries());\n    };\n    fetchApi();\n  }, [SetCountries]);\n\n  return (\n    <div>\n      <FormControl style={{ margin: \"1rem auto\" }}>\n        <NativeSelect\n          defaultValue=\" \"\n          onChange={(e) => props.handleCountryChange(e.target.value)}\n          variant=\"outlined\"\n          style={{ width: \"200PX\", textAlign: \"center\" }}>\n          <option value=\"\">Global</option>\n          {recievedCountries.map((country, i) => (\n            <option key={i} value={country}>\n              {country}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default CountryPicker;\n","import React from \"react\";\nimport classes from \"./App.module.css\";\nimport { Cards, Charts, CountryPicker } from \"./Components\";\nimport { fetchData } from \"./Api\";\nimport coronaImage from \"./Images/image.png\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    console.log(fetchedData);\n    this.setState({ data: fetchedData, country: country });\n  };\n\n  render() {\n    return (\n      <div className={classes.container}>\n        <img className={classes.image} src={coronaImage} alt=\"COVID-19\" />\n        <Cards data={this.state.data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Charts data={this.state.data} country={this.state.country} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__sAPjc\",\"image\":\"App_image__1EvDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__2eeSF\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}